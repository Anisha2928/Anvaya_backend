generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String        @id @default(cuid())
  firstName      String
  lastName       String
  email          String        @unique
  password       String
  role           Role          @default(USER)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  chats          Chat[]
  voice          String? 
  language       String? 
  PDF            PDF[]
  messages       Message[]

  @@map("users")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  chatId    String
  userId    String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade) 
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender    String 
  content   String? 
  language  String?   
  createdAt DateTime @default(now())
}

model PDF {
  id         String   @id @default(cuid())
  adminId    String
  admin      User     @relation(fields: [adminId], references: [id], onDelete: Cascade)
  fileName   String
  filePath   String   
  uploadedAt DateTime @default(now())
}
